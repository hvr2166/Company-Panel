<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Manage Admin header</title>
    <!-- Styles -->
    <link rel="stylesheet" href="style.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">

</head>
<body>
    <div id="dynamic-content">
 <div  id="manageusers-page"  class="container-wrapper">


   
        <!-- Main Content -->
        <main class="content">
            <div class="container">
               

                <!-- Admin Table -->
                <div id="headerTableView" class="table-container">
                    <h2>Manage Admin Header</h2>

                    <button id="addheaderBtn" class="btn btn-primary">Add Header</button>
                    <br><br>
                    <table class="table">
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>Comp Name</th>
                                <th>Sub Head</th>
                                <th>Email</th>
                                <th>Address</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% users.forEach(user => { %>
                                <tr>
                                    <td class="user-id"><%= user.nid %></td>
                                    <td class="comp_name"><%= user.comp_name %></td>
                                    <td class="sub_head"><%= user.sub_head %></td>
                                    <td class="email"><%= user.adminhead_email %></td>
                                    <td class="address"><%= user.adminhead_address %></td>
                                    <td>
                                        <div class="actions">
                                            <!-- Edit Button -->
                                            
                                            <button type="button" class="btn btn-warning edit-user">
                                                <i class="fa-regular fa-pen-to-square"></i>
                                            </button>
                                    
                                            <!-- Delete Button inside inline form -->
                                            <form action="/deleteadminheader/<%= user.nid %>" method="POST">
                                                <button type="submit" class="btn btn-danger delete-user" data-id="<%= user.nid %>">
                                                    <i class="fa-regular fa-trash-can"></i>
                                                </button>
                                            </form>
                                        </div>
                                    </td>
                                    
                                    
                                    
                                </tr>
                            <% }); %>
                        </tbody>
                    </table>
                    <div id="pagination" class="pagination">
                        <button id="prevPage" class="btn btn-secondary">Previous</button>
                        <span id="pageInfo"></span>
                        <button id="nextPage" class="btn btn-secondary">Next</button>
                    </div>
                </div>

                <!-- Add User Form -->
               <!-- Add User Form -->
               <div id="addheaderview" style="display: none;">
                <h3>Add New Header</h3>
                <form action="/addadminheader" method="POST">
                    <div class="form-group">
                        <label>Comp Name</label>
                        <input type="text" name="comp_name" class="form-control" required>
                    </div>
                    <div class="form-group">
                        <label>Sub Head</label>
                        <input type="text" name="sub_head" class="form-control" required>
                    </div>
                    <div class="form-group">
                        <label>Email</label>
                        <input type="email" name="email" class="form-control" required>
                    </div>
                    <div class="form-group">
                        <label>Address</label>
                        <input type="text" name="Address" class="form-control" required>
                    </div>
                    <div class="button-group">
                        <button type="submit" class="btn btn-success" id="submitBtn">Add </button>
                        <button type="button" id="cancelBtn" class="btn btn-secondary">Cancel</button>
                    </div>
                </form>
            </div>

            <div id="editheaderView" style="display: none;">
                <h3>Edit User</h3>
                <form id="editheaderForm" action="/editadminhead" method="POST">
                    <input type="hidden" name="nid" id="edit_nid"> <!-- Hidden field for user ID -->
                    <div class="form-group">
                        <label>Comp name</label>
                        <input type="text" name="comp_name" id="edit_comp_name" class="form-control" required>
                    </div>
                    <div class="form-group">
                        <label>Sub Head</label>
                        <input type="text" name="sub_head" id="edit_sub_head" class="form-control">
                    </div>
                    <div class="form-group">
                        <label>Email</label>
                        <input type="email" name="email" id="edit_email" class="form-control" required>
                    </div>
                    <div class="form-group">
                        <label>Address</label>
                        <input type="text" name="Address" id="edit_Address" class="form-control" required>
                    </div>
                    <div class="button-group">
                        <button type="submit" class="btn btn-success" id="saveEditBtn">Save Details</button>
                        <button type="button" id="cancelEditBtn" class="btn btn-secondary">Cancel</button>
                    </div>
                </form>
            </div>
        </div>
    </main>
</div>
</div>
<script >
    console.log("🛠️ Manage Users script loaded!");

// Delay execution slightly to ensure elements are available
setTimeout(() => {
    console.log("⏳ Checking for elements...");

    function bindManageUsersEvents() {
        const addHeaderBtn = document.getElementById("addheaderBtn"); // Changed from addUserBtn to addHeaderBtn
        const cancelBtn = document.getElementById("cancelBtn");
        const submitBtn = document.getElementById("submitBtn");
        const addHeaderView = document.getElementById("addheaderview"); // Changed from addUserView to addheaderview
        const headerTableView = document.getElementById("headerTableView"); // Changed from userTableView to headerTableView
        const addHeaderForm = document.querySelector("#addheaderview form"); // Changed from addUserForm to addHeaderForm
        const headerTableBody = document.querySelector("#headerTableView tbody"); // Changed from userTableBody to headerTableBody

        // Edit Header Elements
        const editHeaderView = document.getElementById("editheaderView"); // Changed from editUserView to editheaderView
        const editHeaderForm = document.querySelector("#editheaderView form"); // Changed from editUserForm to editHeaderForm
        const cancelEditBtn = document.getElementById("cancelEditBtn");

        if (!addHeaderBtn || !cancelBtn || !submitBtn || !addHeaderView || !headerTableView || !addHeaderForm || !headerTableBody || !editHeaderView || !editHeaderForm || !cancelEditBtn) {
            console.error("❌ Some Manage Header elements are missing! DOM might not be fully loaded.");
            return;
        }

        console.log("✅ Manage Header elements found, adding event listeners...");

        const rows = Array.from(headerTableBody.querySelectorAll("tr"));
            const itemsPerPage = 5; // Number of rows per page
            let currentPage = 1;

            function showPage(page) {
                const start = (page - 1) * itemsPerPage;
                const end = start + itemsPerPage;

                rows.forEach((row, index) => {
                    row.style.display = (index >= start && index < end) ? "" : "none";
                });

                document.getElementById("pageInfo").textContent = `Page ${page} of ${Math.ceil(rows.length / itemsPerPage)}`;
            }

            document.getElementById("prevPage").addEventListener("click", function() {
                if (currentPage > 1) {
                    currentPage--;
                    showPage(currentPage);
                }
            });

            document.getElementById("nextPage").addEventListener("click", function() {
                if (currentPage < Math.ceil(rows.length / itemsPerPage)) {
                    currentPage++;
                    showPage(currentPage);
                }
            });

            // Initial page load
            showPage(currentPage);


        // Show Add Header Form and Hide Header Table
        addHeaderBtn.addEventListener("click", function () {
            console.log("➕ Add Header button clicked");
            headerTableView.style.display = "none";
            addHeaderView.style.display = "block";
            editHeaderView.style.display = "none"; // Hide edit form
        });

        // Hide Add Header Form and Show Header Table
        cancelBtn.addEventListener("click", function () {
            console.log("❌ Cancel button clicked");
            addHeaderView.style.display = "none";
            headerTableView.style.display = "block";
        });

        // Submit Form via AJAX and Dynamically Update Table
        addHeaderForm.addEventListener("submit", async (event) => {
            event.preventDefault(); // Prevent default form submission
            console.log("🚀 Submit button clicked!");

            const formData = new FormData(event.target);
            const urlEncodedData = new URLSearchParams(formData);

            try {
                const response = await fetch("/addadminheader", { // Changed from /adduser to /addadminheader
                    method: "POST",
                    headers: { "Content-Type": "application/x-www-form-urlencoded" },
                    body: urlEncodedData.toString()
                });

                console.log("✅ Response Status:", response.status);

                if (!response.ok) {
                    throw new Error(`Server error! Status: ${response.status}`);
                }
                
                alert("Header added successfully!");
                await reloadManageHeaders(); // ✅ Reload content dynamically
            } catch (error) {
                console.error("🚨 Fetch Error:", error);
                alert("Something went wrong.");
            }
        });

        // ✅ Edit Header Functionality
        document.querySelectorAll(".edit-user").forEach((editBtn) => {
            editBtn.addEventListener("click", function () {
                console.log("✏️ Edit button clicked!");

                const headerRow = this.closest("tr");
                if (!headerRow) {
                    console.error("🚨 Error: Cannot find header row.");
                    return;
                }

                // Extract header data from table row
                const headerId = headerRow.querySelector(".user-id").textContent;
                const compName = headerRow.querySelector(".comp_name").textContent;
                const subHead = headerRow.querySelector(".sub_head").textContent;
                const email = headerRow.querySelector(".email").textContent;
                const address = headerRow.querySelector(".address").textContent;

                // Populate the edit form fields
                document.querySelector("#editheaderView input[name='nid']").value = headerId;
                document.querySelector("#editheaderView input[name='comp_name']").value = compName;
                document.querySelector("#editheaderView input[name='sub_head']").value = subHead;
                document.querySelector("#editheaderView input[name='email']").value = email;
                document.querySelector("#editheaderView input[name='Address']").value = address;

                // Show Edit Header View & Hide Others
                headerTableView.style.display = "none";
                addHeaderView.style.display = "none";
                editHeaderView.style.display = "block";
            });
        });

        // ✅ Handle Edit Header Form Submission
        editHeaderForm.addEventListener("submit", async (event) => {
            event.preventDefault();
            console.log("💾 Save Details button clicked!");

            const formData = new FormData(event.target);
            const urlEncodedData = new URLSearchParams(formData);

            try {
                const response = await fetch("/editadminhead", { // Changed from /edituser to /editadminhead
                    method: "POST",
                    headers: { "Content-Type": "application/x-www-form-urlencoded" },
                    body: urlEncodedData.toString()
                });

                const data = await response.text(); // or .json() if you return JSON
                
                console.log("✅ Edit Response data:",data);

                if (!response.ok) {
                    throw new Error(`Server error! Status: ${response.status}`);
                }
                
                alert("Header updated successfully!");
                await reloadManageHeaders(); // ✅ Reload content dynamically
            } catch (error) {
                console.error("🚨 Edit Error:", error);
                alert("Failed to update header.");
            }
        });

        // Hide Edit Header View
        cancelEditBtn.addEventListener("click", function () {
            console.log("❌ Cancel Edit button clicked");
            editHeaderView.style.display = "none";
            headerTableView.style.display = "block";
        });

        // ✅ Delete Header Functionality
        document.querySelectorAll(".delete-user").forEach((deleteBtn) => {
            deleteBtn.addEventListener("click", async function (event) {
                event.preventDefault(); // Prevent page reload
                console.log("🗑️ Delete button clicked!");

                const headerId = this.dataset.id;
                if (!headerId) {
                    console.error("🚨 Header ID not found in dataset!");
                    return;
                }

                if (!confirm("Are you sure you want to delete this header?")) return;

                try {
                    const response = await fetch(`/deleteadminheader/${headerId}`, { // Changed from /deleteuser to /deleteadminheader
                        method: "POST",
                    });

                    console.log("🗑️ Delete Response Status:", response.status);

                    if (!response.ok) {
                        throw new Error(`Server error! Status: ${response.status}`);
                    }

                    // ✅ Remove the deleted header's row from the table dynamically
                    const rowToDelete = this.closest("tr");
                    if (rowToDelete) {
                        rowToDelete.remove();
                        console.log(`✅ Header ${headerId} removed from table.`);
                    }
                } catch (error) {
                    console.error("🚨 Delete Error:", error);
                    alert("Failed to delete header.");
                }
            });
        });
    }

    // ✅ Function to Reload Manage Headers Page Without Refreshing
    async function reloadManageHeaders() {
        console.log("🔄 Reloading Manage Headers...");
        const contentDiv = document.getElementById("dynamic-content");

        if (!contentDiv) {
            console.error("🚨 Error: #dynamic-content not found!");
            return;
        }

        const updatedContent = await fetch("/admin%20header"); // Changed from /manageusers to /manageheaders
        const html = await updatedContent.text();
        contentDiv.innerHTML = html; // Replace only the content

        bindManageUsersEvents(); // ✅ Rebind event listeners after reload
    }

    // Initial Binding of Events
    bindManageUsersEvents();

}, 500);

</script>

</body>
</html>
