<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Manage Users</title>
    <!-- Styles -->
    <link rel="stylesheet" href="style.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
</head>
<body>
    <div id="dynamic-content">
 <div  id="manageusers-page"  class="container-wrapper">

        <!-- Main Content -->
        <main class="content">
            <div class="container">
              
               

                <!-- Users Table -->
                <div id="userTableView" class="table-container">
                    <h2>Manage Users</h2>
                    <button id="addUserBtn" class="btn btn-primary">Add User</button>
                    <br><br>
                    <table class="table">
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>Username</th>
                                <th>First Name</th>
                                <th>Last Name</th>
                                <th>Email</th>
                                <th>Phone</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% users.forEach(user => { %>
                                <tr>
                                    <td class="user-id"><%= user.nid %></td>
                                    <td class="user-name"><%= user.user_name %></td>
                                    <td class="first-name"><%= user.firstname %></td>
                                    <td class="last-name"><%= user.lastname %></td>
                                    <td class="user-email"><%= user.user_email %></td>
                                    <td class="user-phone"><%= user.phone %></td>
                                    <td>
                                        <div class="actions">
                                            <!-- Edit Button -->
                                            
                                            <button type="button" class="btn btn-warning edit-user">
                                                <i class="fa-regular fa-pen-to-square"></i>
                                            </button>
                                    
                                            <!-- Delete Button inside inline form -->
                                            <form action="/deleteuser/<%= user.nid %>" method="POST">
                                                <button type="submit" class="btn btn-danger delete-user" data-id="<%= user.nid %>">
                                                    <i class="fa-regular fa-trash-can"></i>
                                                </button>
                                            </form>
                                        </div>
                                    </td>
                                    
                                    
                                    
                                </tr>
                            <% }); %>
                            <% if (users.length === 0) { %>
                                <tr><td colspan="7">No users found.</td></tr>
                              <% } %>
                              
                        </tbody>
                    </table>
                    <div id="pagination" class="pagination">
                        <button id="prevPage" class="btn btn-secondary">Previous</button>
                        <span id="pageInfo"></span>
                        <button id="nextPage" class="btn btn-secondary">Next</button>
                    </div>
                </div>
                
               <!-- Add User Form -->
               <div id="addUserView" style="display: none;">
                <h3>Add New User</h3>
                <form action="/adduser" method="POST">
                    <div class="form-group">
                        <label>Username</label>
                        <input type="text" name="user_name" class="form-control" required>
                    </div>
                    <div class="form-group">
                        <label>Password</label>
                        <input type="password" name="user_password" class="form-control" required>
                    </div>
                    <div class="form-group">
                        <label>Email</label>
                        <input type="email" name="user_email" class="form-control" required>
                    </div>
                    <div class="form-group">
                        <label>First Name</label>
                        <input type="text" name="firstname" class="form-control" required>
                    </div>
                    <div class="form-group">
                        <label>Last Name</label>
                        <input type="text" name="lastname" class="form-control" required>
                    </div>
                    <div class="form-group">
                        <label>Phone</label>
                        <input type="text" name="phone" class="form-control" required>
                    </div>
            
                    <div class="button-group">
                        <button type="submit" class="btn btn-success" id="submitBtn">Add </button>
                        <button type="button" id="cancelBtn" class="btn btn-secondary">Cancel</button>
                    </div>
                </form>
            </div>

            <div id="editUserView" style="display: none;">
                <h3>Edit User</h3>
                <form id="editUserForm" action="/edituser" method="POST">
                    <input type="hidden" name="nid" id="edit_nid"> <!-- Hidden field for user ID -->
                    <div class="form-group">
                        <label>Username</label>
                        <input type="text" name="user_name" id="edit_user_name" class="form-control" required>
                    </div>
                    <div class="form-group">
                        <label>Password</label>
                        <input type="password" name="user_password" id="edit_user_password" class="form-control" required>
                    </div>
                    <div class="form-group">
                        <label>Email</label>
                        <input type="email" name="user_email" id="edit_user_email" class="form-control" required>
                    </div>
                    <div class="form-group">
                        <label>First Name</label>
                        <input type="text" name="firstname" id="edit_firstname" class="form-control" required>
                    </div>
                    <div class="form-group">
                        <label>Last Name</label>
                        <input type="text" name="lastname" id="edit_lastname" class="form-control" required>
                    </div>
                    <div class="form-group">
                        <label>Phone</label>
                        <input type="text" name="phone" id="edit_phone" class="form-control" required>
                    </div>
            
                    <div class="button-group">
                        <button type="submit" class="btn btn-success" id="saveEditBtn">Save Details</button>
                        <button type="button" id="cancelEditBtn" class="btn btn-secondary">Cancel</button>
                    </div>
                </form>
            </div>
        </div>
    </main>
</div>
</div>
<script >
    console.log("🛠️ Manage Users script loaded!");

// Delay execution slightly to ensure elements are available
setTimeout(() => {
    console.log("⏳ Checking for elements...");

    function bindManageUsersEvents() {
        const addUserBtn = document.getElementById("addUserBtn");
        const cancelBtn = document.getElementById("cancelBtn");
        const submitBtn = document.getElementById("submitBtn");
        const addUserView = document.getElementById("addUserView");
        const userTableView = document.getElementById("userTableView");
        const addUserForm = document.querySelector("#addUserView form");
        const userTableBody = document.querySelector("#userTableView tbody");

        // Edit User Elements
        const editUserView = document.getElementById("editUserView");
        const editUserForm = document.querySelector("#editUserView form");
        const cancelEditBtn = document.getElementById("cancelEditBtn");

        if (!addUserBtn || !cancelBtn || !submitBtn || !addUserView || !userTableView || !addUserForm || !userTableBody || !editUserView || !editUserForm || !cancelEditBtn) {
            console.error("❌ Some Manage Users elements are missing! DOM might not be fully loaded.");
            return;
        }

        console.log("✅ Manage Users elements found, adding event listeners...");

        const rows = Array.from(userTableBody.querySelectorAll("tr"));
            const itemsPerPage = 5; // Number of rows per page
            let currentPage = 1;

            function showPage(page) {
                const start = (page - 1) * itemsPerPage;
                const end = start + itemsPerPage;

                rows.forEach((row, index) => {
                    row.style.display = (index >= start && index < end) ? "" : "none";
                });

                document.getElementById("pageInfo").textContent = `Page ${page} of ${Math.ceil(rows.length / itemsPerPage)}`;
            }

            document.getElementById("prevPage").addEventListener("click", function() {
                if (currentPage > 1) {
                    currentPage--;
                    showPage(currentPage);
                }
            });

            document.getElementById("nextPage").addEventListener("click", function() {
                if (currentPage < Math.ceil(rows.length / itemsPerPage)) {
                    currentPage++;
                    showPage(currentPage);
                }
            });

            // Initial page load
            showPage(currentPage);


        // Show Add User Form and Hide User Table
        addUserBtn.addEventListener("click", function () {
            console.log("➕ Add User button clicked");
            userTableView.style.display = "none";
            addUserView.style.display = "block";
            editUserView.style.display = "none"; // Hide edit form
        });

        // Hide Add User Form and Show User Table
        cancelBtn.addEventListener("click", function () {
            console.log("❌ Cancel button clicked");
            addUserView.style.display = "none";
            userTableView.style.display = "block";
        });

     addUserForm.addEventListener("submit", async (event) => {
    event.preventDefault(); // ✅ Prevent default form submission

    console.log("🚀 Submit button clicked!");

    // Disable button to prevent double-click
    submitBtn.disabled = true;

    const formData = new FormData(event.target);
    const urlEncodedData = new URLSearchParams(formData);

    try {
        const response = await fetch("/adduser", {
            method: "POST",
            headers: { "Content-Type": "application/x-www-form-urlencoded" },
            body: urlEncodedData.toString()
        });

        console.log("✅ Response Status:", response.status);

        if (!response.ok) {
            throw new Error(`Server error! Status: ${response.status}`);
        }

        alert("User added successfully!");
        await reloadManageUsers(); // ✅ Reload users dynamically
    } catch (error) {
        console.error("🚨 Fetch Error:", error);
        alert("Something went wrong.");
    } finally {
        submitBtn.disabled = false; // Re-enable after request completes
    }
});

        // ✅ Edit User Functionality
        document.querySelectorAll(".edit-user").forEach((editBtn) => {
            editBtn.addEventListener("click", function () {
                console.log("✏️ Edit button clicked!");

                const userRow = this.closest("tr");
                if (!userRow) {
                    console.error("🚨 Error: Cannot find user row.");
                    return;
                }

               

                // Extract user data from table row
                const userId = userRow.querySelector(".user-id").textContent;
                const username = userRow.querySelector(".user-name").textContent;
                const firstname = userRow.querySelector(".first-name").textContent;
                const lastname = userRow.querySelector(".last-name").textContent;
                const email = userRow.querySelector(".user-email").textContent;
                const phone = userRow.querySelector(".user-phone").textContent;

                // Populate the edit form fields
                document.querySelector("#editUserView input[name='nid']").value = userId;
                document.querySelector("#editUserView input[name='user_name']").value = username;
                document.querySelector("#editUserView input[name='firstname']").value = firstname;
                document.querySelector("#editUserView input[name='lastname']").value = lastname;
                document.querySelector("#editUserView input[name='user_email']").value = email;
                document.querySelector("#editUserView input[name='phone']").value = phone;

                // Show Edit User View & Hide Others
                userTableView.style.display = "none";
                addUserView.style.display = "none";
                editUserView.style.display = "block";
            });
        });

        // ✅ Handle Edit User Form Submission
        editUserForm.addEventListener("submit", async (event) => {
            event.preventDefault();
            console.log("💾 Save Details button clicked!");

            const formData = new FormData(event.target);
            const urlEncodedData = new URLSearchParams(formData);

            try {
                const response = await fetch("/edituser", {
                    method: "POST",
                    headers: { "Content-Type": "application/x-www-form-urlencoded" },
                    body: urlEncodedData.toString()
                });

                console.log("✅ Edit Response Status:", response.status);

                if (!response.ok) {
                    throw new Error(`Server error! Status: ${response.status}`);
                }
                
                alert("User updated successfully!");
                await reloadManageUsers(); // ✅ Reload content dynamically
            } catch (error) {
                console.error("🚨 Edit Error:", error);
                alert("Failed to update user.");
            }
        });

        // Hide Edit User View
        cancelEditBtn.addEventListener("click", function () {
            console.log("❌ Cancel Edit button clicked");
            editUserView.style.display = "none";
            userTableView.style.display = "block";
        });

        // ✅ Delete User Functionality
        document.querySelectorAll(".delete-user").forEach((deleteBtn) => {
            deleteBtn.addEventListener("click", async function (event) {
                event.preventDefault(); // Prevent page reload
                console.log("🗑️ Delete button clicked!");

                const userId = this.dataset.id;
                if (!userId) {
                    console.error("🚨 User ID not found in dataset!");
                    return;
                }

                if (!confirm("Are you sure you want to delete this user?")) return;

                try {
                    const response = await fetch(`/deleteuser/${userId}`, {
                        method: "POST",
                    });

                    console.log("🗑️ Delete Response Status:", response.status);

                    if (!response.ok) {
                        throw new Error(`Server error! Status: ${response.status}`);
                    }

                    // ✅ Remove the deleted user's row from the table dynamically
                    const rowToDelete = this.closest("tr");
                    if (rowToDelete) {
                        rowToDelete.remove();
                        console.log(`✅ User ${userId} removed from table.`);
                    }
                } catch (error) {
                    console.error("🚨 Delete Error:", error);
                    alert("Failed to delete user.");
                }
            });
        });
    }

    // ✅ Function to Reload Manage Users Page Without Refreshing
    async function reloadManageUsers() {
        console.log("🔄 Reloading Manage Users...");
        const contentDiv = document.getElementById("dynamic-content");

        if (!contentDiv) {
            console.error("🚨 Error: #dynamic-content not found!");
            return;
        }

        const updatedContent = await fetch("/manage%20user");
        const html = await updatedContent.text();
        contentDiv.innerHTML = html; // Replace only the content

        bindManageUsersEvents(); // ✅ Rebind event listeners after reload
    }

    // Initial Binding of Events
    bindManageUsersEvents();

}, 500);

</script>

</body>
</html>
