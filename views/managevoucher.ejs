<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Manage Voucher</title>
    <!-- Styles -->
    <link rel="stylesheet" href="style.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">

</head>
<body>
    <div id="dynamic-content">
 <div  id="manageusers-page"  class="container-wrapper">
        <!-- Main Content -->
        <main class="content">
            <div class="container">
                <h2>Manage Voucher</h2>
               

                <!-- Voucher Table -->
                <div id="VoucherView" class="table-container">

                    <button id="addVoucherBtn" class="btn btn-primary">Add Voucher</button>
                    <br><br>

                    <div class="filter-container">
                        <label for="accountFilter">Account Name</label>
                        <select name="account_name" class="form-control" required>
                            <option value="">Select Account head</option>
                            <% accname.forEach(function(accname) { %>
                                <option value="<%= accname.head_name %>"><%= accname.head_name %></option>
                            <% }); %>
                        </select>
                
                        <label for="paymentTypeFilter">Payment Type</label>
                        <select id="paymentTypeFilter" class="form-control">
                            <option value="">All Types</option>
                            <option value="paid">Paid</option>
                            <option value="received">Received</option>
                        </select>
                
                        <label for="dateFrom">Date From</label>
                        <input type="date" id="dateFrom" class="form-control">
                
                        <label for="dateTo">Date Upto</label>
                        <input type="date" id="dateTo" class="form-control">
                
                        <button id="searchBtn" class="btn btn-primary">Search</button>
                        <button id="resetBtn" class="btn btn-warning">Reset</button>
                    </div>

                    
                  

                    <br><br>
                    <table class="table">
                        <thead>
                            <tr>
                                <th>Account Name</th>
                                <th>Payment Mode</th>
                                <th>Payment Type</th>
                                <th>Amount</th>
                                <th>Payment Date</th>
                                <th>Payment ref no</th>
                                <th>Remarks</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% voucherData.forEach(data => { %>
                                <tr>
                                    <td class="account_name"><%= data.account_name %></td>
                                    <td class="payment_mode"><%= data.payment_mode %></td>
                                    <td class="payment-type"><%= data.payment_type %></td>
                                    <td class="amount"><%= data.amount %></td>
                                    <td class="payment_date"><%= data.payment_date %></td>
                                    <td class="payment-ref-no"><%= data.payment_ref_no %></td>
                                    <td class="remarks"><%= data.remarks %></td>
                                    <td>
                                        <div class="actions">
                                            <!-- Edit Button -->
                                            
                                            <button type="button" class="btn btn-warning edit-voucher" data-id="<%= data.nid %>">
                                                <i class="fa-regular fa-pen-to-square"></i>
                                            </button>
                                    
                                            <!-- Delete Button inside inline form -->
                                            <form action="/deletevoucher/<%= data.nid %>" method="POST">
                                                <button type="submit" class="btn btn-danger delete-voucher" data-id="<%= data.nid %>">
                                                    <i class="fa-regular fa-trash-can"></i>
                                                </button>
                                            </form>
                                        </div>
                                    </td>
                                    
                                    
                                    
                                </tr>
                            <% }); %>
                        </tbody>
                    </table>
                    <div id="pagination" class="pagination">
                        <button id="prevPage" class="btn btn-secondary">Previous</button>
                        <span id="pageInfo"></span>
                        <button id="nextPage" class="btn btn-secondary">Next</button>
                    </div>
                </div>

               <!-- Add Voucher Form -->
               <div id="addVoucherview" style="display: none;">
                <h3>Add Voucher</h3>
                <form action="/addVoucher" method="POST">
                    <div class="form-group">
                        <label>Account Head</label>
                        <select name="account_name" class="form-control" required>
                            <option value="">Select Account head</option>
                            <% accname.forEach(function(accname) { %>
                                <option value="<%= accname.head_name %>"><%= accname.head_name %></option>
                            <% }); %>
                        </select>
                    </div>
            
                    <div class="form-group">
                        <label>Paid / Received</label>
                        <select name="payment_type" class="form-control" required>
                            <option value="">Select Payment Type</option>
                            <option value="paid">Paid</option>
                            <option value="received">Received</option>
                        </select>
                    </div>
            
                    <div class="form-group">
                        <label>Payment Mode</label>
                        <select name="payment_mode" class="form-control" required>
                            <option value="">Select Payment Mode</option>
                            <option value="cash">Cash</option>
                            <option value="cheque">Cheque</option>
                            <option value="online">Online Transfer</option>
                        </select>
                    </div>

                   <!-- Bank Field -->
<div class="form-group" id="bankFieldGroup" style="display: none;">
    <label>Bank name</label>
    <select name="bank_name" class="form-control">
      <option value="">Select Bank</option>
      <% banks.forEach(function(bank) { %>
        <option value="<%= bank.bank_name %>"><%= bank.bank_name %></option>
      <% }); %>
    </select>
  </div>
  
            
                    <div class="form-group">
                        <label>Amount</label>
                        <input type="number" name="amount" class="form-control" placeholder="Enter Amount" required>
                    </div>
            
                    <div class="form-group">
                        <label>Payment Date</label>
                        <input type="date" name="payment_date" class="form-control" required>
                    </div>
            
                    <div class="form-group">
                        <label>Remarks</label>
                        <input type="text" name="remarks" class="form-control" placeholder="Enter Remarks">
                    </div>
            
                    <div class="button-group">
                        <button type="submit" class="btn btn-primary">Add </button>
                        <button type="button" id="cancelBtn" class="btn btn-warning">Cancel</button>
                    </div>
                </form>
            </div>
            

            <div id="editVoucherView" style="display: none;">
                <h3>Edit Voucher</h3>
                <form id="editVoucherForm" action="/editvoucher" method="POST">
                    <input type="hidden" name="nid" id="edit_nid"> <!-- Hidden field for voucher ID -->
                    
                    <div class="form-group">
                        <label>Account Head</label>
                        <select name="edit_account_name" class="form-control" required>
                            <option value="">Select Account head</option>
                            <% accname.forEach(function(accname) { %>
                                <option value="<%= accname.head_name %>"><%= accname.head_name %></option>
                            <% }); %>
                        </select>
                    </div>
            
                    <div class="form-group">
                        <label>Paid / Received</label>
                        <select name="edit_payment_type" class="form-control" required>
                            <option value="">Select Payment Type</option>
                            <option value="paid">Paid</option>
                            <option value="received">Received</option>
                        </select>
                    </div>
            
                    <div class="form-group">
                        <label>Payment Mode</label>
                        <select name="edit_payment_mode" class="form-control" required>
                            <option value="">Select Payment Mode</option>
                            <option value="cash">Cash</option>
                            <option value="cheque">Cheque</option>
                            <option value="online">Online Transfer</option>
                        </select>
                    </div>
            
                    <div class="form-group">
                        <label>Bank name</label>
                        <select name="edit_bank_name" class="form-control">
                            <option value="">Select Bank</option>
                            <% banks.forEach(function(bank) { %>
                                <option value="<%= bank.bank_name %>"><%= bank.bank_name %></option>
                            <% }); %>
                        </select>
                    </div>

                    <div class="form-group">
                        <label>Payment ref no</label>
                        <input type="text" name="edit_payment_ref_no" class="form-control" placeholder="Enter payment ref no" required>
                    </div>
            
                    <div class="form-group">
                        <label>Amount</label>
                        <input type="number" name="edit_amount" class="form-control" placeholder="Enter Amount" required>
                    </div>
            
                    <div class="form-group">
                        <label>Payment Date</label>
                        <input type="date" name="edit_payment_date" class="form-control" required>
                    </div>
            
                    <div class="form-group">
                        <label>Remarks</label>
                        <input type="text" name="edit_remarks" class="form-control" placeholder="Enter Remarks">
                    </div>
            
                    <div class="button-group">
                        <button type="submit" class="btn btn-success" id="saveEditBtn">Save Details</button>
                        <button type="button" id="cancelEditBtn" class="btn btn-secondary">Cancel</button>
                    </div>
                </form>
            </div>
        </div>
    </main>
</div>
</div>
<script>
console.log("🛠️ Manage Voucher script loaded!");

setTimeout(() => {
    console.log("⏳ Checking for elements...");

    function bindManageVoucherEvents() {
        const addVoucherBtn = document.getElementById("addVoucherBtn");
        const cancelBtn = document.getElementById("cancelBtn");
        const addVoucherView = document.getElementById("addVoucherview");
        const voucherTableView = document.getElementById("VoucherView");
        const addVoucherForm = document.querySelector("#addVoucherview form");
        const voucherTableBody = document.querySelector("#VoucherView tbody");

        // Edit Voucher Elements
        const editVoucherView = document.getElementById("editVoucherView");
        const editVoucherForm = document.querySelector("#editVoucherView form");
        const cancelEditBtn = document.getElementById("cancelEditBtn");

        if (!addVoucherBtn || !cancelBtn || !addVoucherView || !voucherTableView || !addVoucherForm || !voucherTableBody || !editVoucherView || !editVoucherForm || !cancelEditBtn) {
            console.error("❌ Some Manage Voucher elements are missing! DOM might not be fully loaded.");
            return;
        }

        console.log("✅ Manage Voucher elements found, adding event listeners...");

        const rows = Array.from(voucherTableBody.querySelectorAll("tr"));
        const itemsPerPage = 5; // Number of rows per page
        let currentPage = 1;

        function showPage(page) {
            const start = (page - 1) * itemsPerPage;
            const end = start + itemsPerPage;

            rows.forEach((row, index) => {
                row.style.display = (index >= start && index < end) ? "" : "none";
            });

            document.getElementById("pageInfo").textContent = `Page ${page} of ${Math.ceil(rows.length / itemsPerPage)}`;
        }

        document.getElementById("prevPage").addEventListener("click", function() {
            if (currentPage > 1) {
                currentPage--;
                showPage(currentPage);
            }
        });

        document.getElementById("nextPage").addEventListener("click", function() {
            if (currentPage < Math.ceil(rows.length / itemsPerPage)) {
                currentPage++;
                showPage(currentPage);
            }
        });

        // Initial page load
        showPage(currentPage);

        // Show/Hide Bank field based on Payment Mode
const paymentModeSelect = document.querySelector("#addVoucherview select[name='payment_mode']");
const bankFieldGroup = document.getElementById("bankFieldGroup");

paymentModeSelect.addEventListener("change", function () {
  const selected = this.value;
  if (selected === "cheque" || selected === "online") {
    bankFieldGroup.style.display = "block";
  } else {
    bankFieldGroup.style.display = "none";
  }
});


        // Show Add Voucher Form and Hide Voucher Table
        addVoucherBtn.addEventListener("click", function () {
            console.log("➕ Add Voucher button clicked");
            voucherTableView.style.display = "none";
            addVoucherView.style.display = "block";
            editVoucherView.style.display = "none"; // Hide edit form
        });

        // Hide Add Voucher Form and Show Voucher Table
        cancelBtn.addEventListener("click", function () {
            console.log("❌ Cancel button clicked");
            addVoucherView.style.display = "none";
            voucherTableView.style.display = "block";
        });

        // Submit Form via AJAX and Dynamically Update Table
        addVoucherForm.addEventListener("submit", async (event) => {
            event.preventDefault(); // Prevent default form submission
            console.log("🚀 Submit button clicked!");

            const formData = new FormData(event.target);
            const urlEncodedData = new URLSearchParams(formData);

            try {
                const response = await fetch("/addVoucher", {
                    method: "POST",
                    headers: { "Content-Type": "application/x-www-form-urlencoded" },
                    body: urlEncodedData.toString()
                });

                console.log("✅ Response Status:", response.status);

                if (!response.ok) {
                    throw new Error(`Server error! Status: ${response.status}`);
                }
                
                alert("Voucher added successfully!");
                await reloadManageVouchers(); // ✅ Reload content dynamically
            } catch (error) {
                console.error("🚨 Fetch Error:", error);
                alert("Something went wrong.");
            }
        });

       // ✅ Edit Voucher Functionality
document.querySelectorAll(".edit-voucher").forEach((editBtn) => {
    editBtn.addEventListener("click", function () {
        console.log("✏️ Edit button clicked!");

        const voucherRow = this.closest("tr");
        if (!voucherRow) {
            console.error("🚨 Error: Cannot find voucher row.");
            return;
        }

        // Extract voucher data from table row
        const voucherId = this.dataset.id;
        const accountHead = voucherRow.querySelector(".account_name").textContent;
        const paymentType = voucherRow.querySelector(".payment-type").textContent;
        const paymentMode = voucherRow.querySelector(".payment_mode").textContent;
        const amount = voucherRow.querySelector(".amount").textContent;
        const paymentDate = voucherRow.querySelector(".payment_date").textContent;
        const bankName = voucherRow.querySelector(".payment-ref-no").textContent; // Assuming this is where bank name is stored
        const remarks = voucherRow.querySelector(".remarks").textContent;

        // Populate the edit form fields
        document.querySelector("#editVoucherForm input[name='nid']").value = voucherId;
        document.querySelector("#editVoucherForm select[name='edit_account_name']").value = accountHead;
        document.querySelector("#editVoucherForm select[name='edit_payment_type']").value = paymentType;
        document.querySelector("#editVoucherForm select[name='edit_payment_mode']").value = paymentMode;
        document.querySelector("#editVoucherForm input[name='edit_amount']").value = amount;
        document.querySelector("#editVoucherForm input[name='edit_payment_date']").value = paymentDate;
        document.querySelector("#editVoucherForm input[name='edit_remarks']").value = remarks;
        document.querySelector("#editVoucherForm select[name='edit_bank_name']").value = bankName; // Assuming bank name is stored here

        // Show Edit Voucher View & Hide Others
        voucherTableView.style.display = "none";
        addVoucherView.style.display = "none";
        editVoucherView.style.display = "block";
    });
});

        // ✅ Handle Edit Voucher Form Submission
        editVoucherForm.addEventListener("submit", async (event) => {
            event.preventDefault();
            console.log("💾 Save Details button clicked!");

            const formData = new FormData(event.target);
            const urlEncodedData = new URLSearchParams(formData);

            try {
                const response = await fetch("/editVoucher", {
                    method: "POST",
                    headers: { "Content-Type": "application/x-www-form-urlencoded" },
                    body: urlEncodedData.toString()
                });

                console.log("✅ Edit Response Status:", response.status);

                if (!response.ok) {
                    throw new Error(`Server error! Status: ${response.status}`);
                }
                
                alert("Voucher updated successfully!");
                await reloadManageVouchers(); // ✅ Reload content dynamically
            } catch (error) {
                console.error("🚨 Edit Error:", error);
                alert("Failed to update voucher.");
            }
        });

        // Hide Edit Voucher View
        cancelEditBtn.addEventListener("click", function () {
            console.log("❌ Cancel Edit button clicked");
            editVoucherView.style.display = "none";
            voucherTableView.style.display = "block";
        });

        // ✅ Delete Voucher Functionality
        document.querySelectorAll(".delete-voucher").forEach((deleteBtn) => {
            deleteBtn.addEventListener("click", async function (event) {
                event.preventDefault(); // Prevent page reload
                console.log("🗑️ Delete button clicked!");

                const voucherId = this.dataset.id;
                if (!voucherId) {
                    console.error("🚨 Voucher ID not found in dataset!");
                    return;
                }

                if (!confirm("Are you sure you want to delete this voucher?")) return;

                try {
                    const response = await fetch(`/deleteVoucher/${voucherId}`, {
                        method: "POST",
                    });

                    console.log("🗑️ Delete Response Status:", response.status);

                    if (!response.ok) {
                        throw new Error(`Server error! Status: ${response.status}`);
                    }

                    // ✅ Remove the deleted voucher's row from the table dynamically
                    const rowToDelete = this.closest("tr");
                    if (rowToDelete) {
                        rowToDelete.remove();
                        console.log(`✅ Voucher ${voucherId} removed from table.`);
                    }
                } catch (error) {
                    console.error("🚨 Delete Error:", error);
                    alert("Failed to delete voucher.");
                }
            });
        });
    }

    // ✅ Set all date inputs to today's date by default
document.querySelectorAll("input[type='date']").forEach((input) => {
    const today = new Date();
    const yyyy = today.getFullYear();
    const mm = String(today.getMonth() + 1).padStart(2, '0'); // Months start at 0
    const dd = String(today.getDate()).padStart(2, '0');
    const formattedDate = `${yyyy}-${mm}-${dd}`;

    // Set value only if not already populated (e.g., in edit form)
    if (!input.value) {
        input.value = formattedDate;
    }
});


    // ✅ Function to Reload Manage Vouchers Page Without Refreshing
    async function reloadManageVouchers() {
        console.log("🔄 Reloading Manage Vouchers...");
        const contentDiv = document.getElementById("dynamic-content");

        if (!contentDiv) {
            console.error("🚨 Error: #dynamic-content not found!");
            return;
        }

        const updatedContent = await fetch("/managevoucher");
        const html = await updatedContent.text();
        contentDiv.innerHTML = html; // Replace only the content

        bindManageVoucherEvents(); // ✅ Rebind event listeners after reload
    }

    // Initial Binding of Events
    bindManageVoucherEvents();

}, 500);


</script>

</body>
</html>
